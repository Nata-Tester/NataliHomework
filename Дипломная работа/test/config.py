"""
Конфигурационный модуль для тестов Кинопоиска.

Содержит все настройки окружения, таймауты и тестовые данные.
Модуль используется всеми тестами проекта для доступа
к единому источнику конфигурации.

Пример использования:
    from config import Config
    print(Config.BASE_URL)
"""


class Config:
    """
    Основной класс конфигурации тестового окружения.

    Содержит константы для:
    - Базовых URL
    - Таймаутов ожидания элементов
    - Тестовых данных

    Attributes:
        BASE_URL (str): Базовый URL тестируемого сайта.
        SEARCH_TIMEOUT (int): Таймаут ожидания для операций поиска (в секундах)
        ELEMENT_TIMEOUT (int): Таймаут ожидания элементов UI (в секундах).
        TEST_DATA (dict): Словарь с тестовыми данными для различных сценариев.
    """

    # Базовый URL тестируемого приложения
    BASE_URL = "https://www.kinopoisk.ru/"

    # Таймауты ожидания (в секундах)
    SEARCH_TIMEOUT = 15  # Для операций поиска
    ELEMENT_TIMEOUT = 15  # Для ожидания элементов UI

    # Тестовые данные
    TEST_DATA = {
        # Корректное русское название фильма
        "russian_film": "Новокаин",

        # Корректное английское название того же фильма
        "english_film": "Novocaine",

        # Заведомо несуществующее название
        "wrong_film": "НесуществующийФильм123",

        # Название с опечаткой (должно находить исправленный вариант)
        "typo_film": "Новакаин",

    }

    @classmethod
    def get_test_data(cls, key: str) -> str:
        """
        Возвращает тестовые данные по ключу с проверкой.

        Args:
            key: Ключ из словаря TEST_DATA.

        Returns:
            Значение по указанному ключу.

        Raises:
            KeyError: Если ключ отсутствует в TEST_DATA.
        """
        if key not in cls.TEST_DATA:
            raise KeyError(f"Ключ '{key}' не найден в тестовых данных. "
                           f"Доступные ключи: {list(cls.TEST_DATA.keys())}")
        return cls.TEST_DATA[key]
